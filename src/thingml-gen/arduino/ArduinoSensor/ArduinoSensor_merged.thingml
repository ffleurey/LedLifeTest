thing ArduinoSensor includes LoggerMsgs , TimerMsgs {
	provided port gateway {
		sends observation receives requestMeasurement
	}
	required port clock {
		sends timer_start sends timer_cancel receives timer_timeout
	}
	property R : Int16 [ 6 ]
	function initialize() do
	'pinMode(2, OUTPUT);
  		 pinMode(3, OUTPUT);
  		 pinMode(4, OUTPUT);'
		R[0] = 270
		R[1] = 270
		R[2] = 91
		R[3] = 91
		R[4] = 56
		R[5] = 56
	end
	function sampleChannel(id : UInt8) do
		'digitalWrite(2, (' & id & ' & 0x01));
		 digitalWrite(3, (' & id & ' & 0x02));
		 digitalWrite(4, (' & id & ' & 0x04));
		 delay(2);'
		var voltage : Long = 'analogRead(0)'
		var light : Int16 = 'analogRead(1)'
		voltage = (voltage * 5000) / 1024
		var current : Long = ((5000 - voltage) * 10) / R [id]
		gateway!observation(id, current, voltage, light)
	end
	statechart Main init READY {
		on entry initialize()
		state READY {
			internal
			event m : gateway?requestMeasurement
			action sampleChannel(m.id)
		}
	}
}
thing LoggerMsgs {
	message requestMeasurement(id : UInt8)
	@code "10"
	message observation(id : UInt8, current : Int16, voltage : Int16, brightness : Int16)
	@code "20"
}
thing fragment TimerMsgs {
	message timer_start(id : UInt8, time : UInt32)
	@timer_start "true" message timer_cancel(id : UInt8)
	@timer_cancel "true" message timer_timeout(id : UInt8)
	@timeout "true"
	message io_clock()
	@xms_tic "10" message fps_clock()
	@xms_tic "33" message ui_clock()
	@xms_tic "231"
}
datatype Char<1>
	@type_checker "Integer"
	@c_type "char"
	@c_byte_size "1"
object String
	@type_checker "String"
	@c_type "char *"
	@c_byte_size "2"
datatype Boolean<1>
	@type_checker "Boolean"
	@c_type "uint8_t"
	@c_byte_size "1"
datatype UInt8<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@c_byte_size "1"
datatype UInt16<2>
	@type_checker "Integer"
	@c_type "uint16_t"
	@c_byte_size "2"
	@java_type "int"
	@java_primitive "true"
datatype Int8<1>
	@type_checker "Integer"
	@c_type "int8_t"
	@c_byte_size "1"
datatype Int16<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@c_byte_size "2"
datatype UInt32<4>
	@type_checker "Integer"
	@c_type "uint32_t"
	@c_byte_size "4"
datatype Integer<2>
	@type_checker "Integer"
	@c_type "int16_t"
	@c_byte_size "2"
datatype Long<4>
	@type_checker "Integer"
	@c_type "long"
	@c_byte_size "4"
datatype Float<4>
	@type_checker "Real"
	@c_type "float"
	@c_byte_size "4"
enumeration DigitalState
	@c_byte_size "1"
	@c_type "uint8_t"
	{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}
datatype Byte<1>
	@type_checker "Integer"
	@c_type "uint8_t"
	@c_byte_size "1"
	@java_type "byte"
	@java_primitive "true"
	@scala_type "Byte"
	@SenML_type "Double"
enumeration DigitalState
	@c_type "uint8_t"
	@c_byte_size "1"
	{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}
protocol Serial @serializer "Binary" ;

protocol Timer ;

configuration ArduinoSensor {
	instance sensor : ArduinoSensor
	connector sensor.clock over Timer
	connector sensor.gateway over Serial
}
